<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zl.framework.mapper.master.UserMapper" >
  <resultMap id="baseResultMap" type="com.zl.framework.entity.User" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="work_address" property="workAddress" jdbcType="VARCHAR" />
    <result column="val" property="val" jdbcType="DECIMAL" />
    <result column="rea" property="rea" jdbcType="DECIMAL" />
  </resultMap>
  <sql id="Base_Column_List" >
    id,name,work_address,val,rea
  </sql>
  <!-- 查询所有的信息   -->
  <select id="listAllUser" resultMap="baseResultMap">
    select 
    <include refid="Base_Column_List" /> 
    from user 
  </select>
  <!-- 根据属性条件查询的信息   -->
  <select id="listUserByCondition" parameterType="map"  resultMap="baseResultMap">
    select 
    <include refid="Base_Column_List" /> 
    from user 
    <where> 1=1  
      <if test="name != null and name !='' ">
        AND name = #{name, jdbcType=VARCHAR}  
      </if> 
      <if test="val != null and val !='' ">
        AND val = #{val, jdbcType=DECIMAL}  
      </if> 
      <if test="id != null and id !='' ">
        AND id = #{id,jdbcType=BIGINT}  
      </if> 
      <if test="rea != null and rea !='' ">
        AND rea = #{rea, jdbcType=DECIMAL}  
      </if> 
      <if test="workAddress != null and workAddress !='' ">
        AND work_address = #{workAddress, jdbcType=VARCHAR}  
      </if> 
   </where>
  </select>
  <!-- 新增的信息  -->
  <insert id="insertUser" parameterType="com.zl.framework.entity.User">
    insert into user ( name, val, id, rea, work_address)
    values ( #{name, jdbcType=VARCHAR}, #{val, jdbcType=DECIMAL}, #{id,jdbcType=BIGINT}, #{rea, jdbcType=DECIMAL}, #{workAddress, jdbcType=VARCHAR}) 
  </insert>
  <!--  根据PrimaryKey修改的信息 -->
  <update id="updateUserByPrimaryKey" parameterType="com.zl.framework.entity.User">
    update user  
    set            name = #{name, jdbcType=VARCHAR},
         val = #{val, jdbcType=DECIMAL},
         rea = #{rea, jdbcType=DECIMAL},
         work_address = #{workAddress, jdbcType=VARCHAR}  
    where id = #{id,jdbcType=BIGINT} 
  </update>
  <!--   根据PrimaryKey删除的信息-->
  <delete id="deleteUserByPrimaryKey" parameterType="java.lang.Long">
    delete from user  
    where id = #{id,jdbcType=BIGINT} 
  </delete>
</mapper>

